buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'

version = "1.12.2-2.7.2"
group= "com.hiroku.tournaments"
archivesBaseName = "Tournaments"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'stable', version: '39-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                tournaments {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                tournaments {
                    source sourceSets.main
                }
            }
        }
    }
}


dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'
	implementation 'org.spongepowered:spongeapi:7.1.0-SNAPSHOT'
    implementation 'reforged:server:8.3.1@Pixelmon-1.12.2-8.3.1c-server.jar'
    implementation group: 'com.exsoloscript.challonge', name: 'challonge-java', version: '1.0.3'
    implementation 'com.github.rojo8399:PlaceholderAPI:4.5.1'
}

repositories {
	mavenCentral()
    maven { url 'http://oss.sonatype.org/content/repositories/snapshots'}
    maven { url "http://dvs1.progwml6.com/files/maven" }
	maven { url "https://repo.spongepowered.org/maven/"}
    maven { url "https://jitpack.io/" }
    ivy {
        url "https://download.nodecdn.net/containers"
        layout "pattern", {
            artifact "/[organisation]/[module]/release/[revision]/[ext]"
        }
    }

}



tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
    task.options.fork = true
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : "Tournaments",
                "Specification-Vendor"    : "Hiroku",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "Hiroku",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
